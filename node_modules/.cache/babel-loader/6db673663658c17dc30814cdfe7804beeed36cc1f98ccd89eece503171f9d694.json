{"ast":null,"code":"import { FETCH_POSTS_REQUEST, FETCH_POSTS_SUCCESS, FETCH_POSTS_FAILURE } from './actionTypes';\nexport const fetchPostsRequest = () => {\n  return {\n    type: FETCH_POSTS_REQUEST\n  };\n};\nexport const fetchPostsSuccess = posts => {\n  return {\n    type: FETCH_POSTS_SUCCESS,\n    payload: posts\n  };\n};\nexport const fetchPostsFailure = error => {\n  return {\n    type: FETCH_POSTS_FAILURE,\n    payload: error\n  };\n};\nexport const fetchPosts = () => {\n  return dispatch => {\n    dispatch(fetchPostsRequest());\n    fetch('https://official-joke-api.appspot.com/jokes/ten').then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error - ' + response.status);\n      }\n    }).then(data => {\n      dispatch(fetchPostsSuccess(data));\n    }).catch(error => {\n      dispatch(fetchPostsFailure(error));\n    });\n  };\n};","map":{"version":3,"names":["FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","fetchPostsRequest","type","fetchPostsSuccess","posts","payload","fetchPostsFailure","error","fetchPosts","dispatch","fetch","then","response","ok","json","Error","status","data","catch"],"sources":["/Users/techi.s./reddux/src/actions.js"],"sourcesContent":["import { FETCH_POSTS_REQUEST, FETCH_POSTS_SUCCESS, FETCH_POSTS_FAILURE } from './actionTypes';\n\nexport const fetchPostsRequest = () => {\n    return {\n        type: FETCH_POSTS_REQUEST\n    }\n}\n\nexport const fetchPostsSuccess = (posts) => {\n    return {\n        type: FETCH_POSTS_SUCCESS,\n        payload: posts\n    }\n}\n\nexport const fetchPostsFailure = (error) => {\n    return {\n        type: FETCH_POSTS_FAILURE,\n        payload: error\n    }\n}\n\nexport const fetchPosts = () => {\n    return (dispatch) => {\n        dispatch(fetchPostsRequest())\n        \n        fetch('https://official-joke-api.appspot.com/jokes/ten')\n        .then(response => {\n            if(response.ok){\n                return response.json();\n            }else{\n                throw new Error('Error - ' + response.status);\n            }\n        })\n        .then(data => {\n            dispatch(fetchPostsSuccess(data));\n        })\n        .catch(error => {\n            dispatch(fetchPostsFailure(error));\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,QAAQ,eAAe;AAE7F,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACnC,OAAO;IACHC,IAAI,EAAEJ;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAIC,KAAK,IAAK;EACxC,OAAO;IACHF,IAAI,EAAEH,mBAAmB;IACzBM,OAAO,EAAED;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAIC,KAAK,IAAK;EACxC,OAAO;IACHL,IAAI,EAAEF,mBAAmB;IACzBK,OAAO,EAAEE;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAQC,QAAQ,IAAK;IACjBA,QAAQ,CAACR,iBAAiB,CAAC,CAAC,CAAC;IAE7BS,KAAK,CAAC,iDAAiD,CAAC,CACvDC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAGA,QAAQ,CAACC,EAAE,EAAC;QACX,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1B,CAAC,MAAI;QACD,MAAM,IAAIC,KAAK,CAAC,UAAU,GAAGH,QAAQ,CAACI,MAAM,CAAC;MACjD;IACJ,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACVR,QAAQ,CAACN,iBAAiB,CAACc,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAACX,KAAK,IAAI;MACZE,QAAQ,CAACH,iBAAiB,CAACC,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC;EACN,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}